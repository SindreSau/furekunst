---
import Frame from '../components/Frame.astro';
import type { GalleryPostEntry } from '../types/galleryPost';
import type { SizeAndPriceEntry } from '../types/sizeAndPrice';

interface Props {
    post: GalleryPostEntry;
}

const { post } = Astro.props;
const { fields } = post;

const imageUrl = `https:${fields.image.fields.file.url}`;
const imageWidth = fields.image.fields.file.details.image?.width || 800;
const imageHeight = fields.image.fields.file.details.image?.height || 600;
const aspectRatio = imageHeight / imageWidth;
const isLandscape = aspectRatio < 1;

const title = fields.title;
const type = fields.type;
const price = fields.price;
const sizeAndPrice: SizeAndPriceEntry[] = fields.sizeAndPrice || [];
const passepartout = fields.passepartout;

let lowestPrice: number | undefined;
if (type === 'print' && sizeAndPrice.length > 0) {
    lowestPrice = Math.min(...sizeAndPrice.map((item) => item.fields.price));
}

const displayPrice = type === 'print' ? lowestPrice : price;

const slug = title
    .toLowerCase()
    .replace(/\s+/g, '-')
    .replace(/[^\w-]+/g, '');
---

<a
    href={`/galleri/${slug}`}
    class={`group flex flex-col h-full cursor-pointer ${isLandscape ? 'col-span-2' : 'col-span-1'}`}>
    <div
        class='flex-grow flex items-center justify-center overflow-hidden frame-shadow'
        transition:name={'image-' + slug}>
        <Frame
            src={imageUrl}
            alt={title}
            innerframe={true}
            width={imageWidth}
            height={imageHeight}
            outerFrameWidth={5}
            passepartout={passepartout}
        />
    </div>
    <div class='flex flex-row justify-between items-center mt-2 p-2'>
        <h2 class='text-xl font-bold truncate'>{title}</h2>
        {
            displayPrice !== undefined && (
                <span class='text-sm whitespace-nowrap'>
                    {type === 'print' ? 'Fra kr ' : 'kr '}
                    {displayPrice + ',00'}
                </span>
            )
        }
    </div>
</a>

<style>
    .frame-shadow {
        box-shadow: 5px 5px 3px rgba(0, 0, 0, 0.3);
    }
</style>
