---
import { Image } from 'astro:assets';

interface Props {
    src: string;
    width: number;
    height: number;
    alt: string;
    innerFrame?: boolean;
}

const { src, width, height, alt, innerFrame = false } = Astro.props;

// Light wood color for outer frame
const outerFrameColor = '#D2B48C';
// Darker wood color for frame edges
const outerFrameEdgeColor = '#B8860B';
// Almost white color for inner frame
const innerFrameColor = '#F8F8F8';
---

<article
    class='image-frame'
    style={`--outer-frame-color: ${outerFrameColor}; --outer-frame-edge-color: ${outerFrameEdgeColor};`}>
    <div
        class={`frame-content ${innerFrame ? 'with-inner-frame' : ''}`}
        style={`--inner-frame-color: ${innerFrameColor};`}>
        <Image src={`https:${src}`} width={width} height={height} alt={alt} class='w-full h-64 object-cover' />
    </div>
</article>

<style>
    .image-frame {
        padding: 20px;
        background-color: var(--outer-frame-color);
        box-shadow: 
            /* Outer shadow */
            -10px 10px 20px rgba(0, 0, 0, 0.3),
            /* Inner shadow for depth */ inset 0 0 20px rgba(0, 0, 0, 0.1),
            /* Highlight on top edge */ inset 0 1px 1px rgba(255, 255, 255, 0.2);
        display: inline-block;
        position: relative;
        border: 2px solid var(--outer-frame-edge-color);
    }

    /* Create a 3D effect for frame edges */
    .image-frame::before {
        content: '';
        position: absolute;
        top: -2px;
        left: -2px;
        right: -2px;
        bottom: -2px;
        background: linear-gradient(45deg, var(--outer-frame-edge-color), var(--outer-frame-color) 20%);
        z-index: -1;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    }

    /* Add wood grain texture */
    .image-frame::after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-image: url("data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.8' numOctaves='4' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise)' opacity='0.1'/%3E%3C/svg%3E");
        opacity: 0.1;
        mix-blend-mode: multiply;
    }

    .frame-content {
        position: relative;
        overflow: hidden;
        box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .frame-content.with-inner-frame::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        border: 10px solid var(--inner-frame-color);
        z-index: 1;
        box-shadow:
            inset 0 0 5px rgba(0, 0, 0, 0.1),
            0 0 5px rgba(0, 0, 0, 0.1);
    }

    .framed-image {
        display: block;
        max-width: 100%;
        height: auto;
    }
</style>
