---
import { Image } from 'astro:assets';
import MainLayout from '../layouts/MainLayout.astro';
import lazydogs from '../assets/images/lazydogs.jpg';
import hjort from '../assets/images/hjort.jpeg';
import labrador from '../assets/images/labrador.jpeg';
import sjimpanse from '../assets/images/sjimpanse.jpeg';

const title = 'Hjem';
const carouselImages = [hjort, sjimpanse, labrador];
---

<MainLayout title={title}>
    <div class='relative fade-in-element'>
        <Image
            src={lazydogs}
            alt='Bilde: Lazy dogs'
            widths={[240, 540, 720, 1200]}
            sizes={`(max-width: 360px) 240px, (max-width: 720px) 540px, (max-width: 1600px) 720px, 1200px`}
            quality={'high'}
            loading={'eager'}
            class='w-full object-cover'
            id='heroImage'
        />
    </div>

    <section class='py-12'>
        <h1 class='text-center mb-8 fade-in-element'>Populære kunstverk</h1>

        <!-- Carousel for small screens -->
        <div class='md:hidden relative w-full h-[500px] overflow-hidden fade-in-element'>
            <!-- Adjust height as needed -->
            <div id='carousel' class='w-full h-full relative'>
                {
                    carouselImages.map((img, index) => (
                        <div
                            class={`absolute top-0 left-0 w-full h-full transition-opacity duration-1000 ease-in-out ${index === 0 ? 'opacity-100 z-10' : 'opacity-0 z-0'}`}>
                            <Image
                                src={img}
                                alt={`Slide ${index + 1}`}
                                width={500}
                                class='w-full h-full object-cover'
                                quality={'mid'}
                                loading={'lazy'}
                            />
                        </div>
                    ))
                }
            </div>
            <button
                id='prevBtn'
                class='absolute left-2 top-1/2 transform -translate-y-1/2 bg-white bg-opacity-50 p-2 rounded-full z-20'>
                <svg
                    xmlns='http://www.w3.org/2000/svg'
                    fill='none'
                    viewBox='0 0 24 24'
                    stroke='currentColor'
                    class='w-6 h-6'>
                    <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M15 19l-7-7 7-7'></path>
                </svg>
            </button>
            <button
                id='nextBtn'
                class='absolute right-2 top-1/2 transform -translate-y-1/2 bg-white bg-opacity-50 p-2 rounded-full z-20'>
                <svg
                    xmlns='http://www.w3.org/2000/svg'
                    fill='none'
                    viewBox='0 0 24 24'
                    stroke='currentColor'
                    class='w-6 h-6'>
                    <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M9 5l7 7-7 7'></path>
                </svg>
            </button>
        </div>

        <!-- Grid for larger screens -->
        <div class='hidden md:grid sm:grid-cols-3 gap-8'>
            {
                carouselImages.map((img, index) => (
                    <div class='aspect-auto overflow-hidden fade-in-element'>
                        <Image
                            src={img}
                            alt={`Image ${index + 1}`}
                            width={500}
                            class='w-full h-full object-cover'
                            quality={'mid'}
                            loading={'lazy'}
                        />
                    </div>
                ))
            }
        </div>

        <!-- Link to gallery (button) -->
        <div class='flex justify-center gap-12 mt-12 fade-in-element'>
            <a
                href='/galleri'
                class='inline-block px-6 py-3 border-4 border-double border-gray-800 text-gray-800 font-serif font-medium md:hover:px-8 md:hover:py-3 transition-all duration-300 ease-in-out'>
                Galleri →
            </a>
            <a
                href='/om-kontakt'
                class='inline-block px-6 py-3 border-4 border-double border-gray-800 text-gray-800 font-serif font-medium md:hover:px-8 md:hover:py-3 transition-all duration-300 ease-in-out'>
                Ta kontakt →
            </a>
        </div>
    </section>

    <style>
        .fade-in-element {
            opacity: 0;
            transform: translateY(20px);
            transition:
                opacity 0.5s ease-out,
                transform 0.5s ease-out;
        }

        .fade-in-element.visible {
            opacity: 1;
            transform: translateY(0);
        }
    </style>

    <script>
        function setupCarousel() {
            const carousel = document.getElementById('carousel');
            const prevBtn = document.getElementById('prevBtn');
            const nextBtn = document.getElementById('nextBtn');
            const slides = carousel ? (Array.from(carousel.children) as HTMLElement[]) : [];
            let currentIndex = 0;
            let intervalId: number | null = null;

            function showSlide(index: number) {
                slides.forEach((slide, i) => {
                    slide.style.opacity = i === index ? '1' : '0';
                    slide.style.zIndex = i === index ? '1' : '0';
                });
            }

            function nextSlide() {
                currentIndex = (currentIndex + 1) % slides.length;
                showSlide(currentIndex);
            }

            function prevSlide() {
                currentIndex = (currentIndex - 1 + slides.length) % slides.length;
                showSlide(currentIndex);
            }

            function startAutoSwitch() {
                if (window.innerWidth < 768 && intervalId === null) {
                    // Only on mobile screens
                    intervalId = window.setInterval(nextSlide, 4000);
                }
            }

            function stopAutoSwitch() {
                if (intervalId !== null) {
                    window.clearInterval(intervalId);
                    intervalId = null;
                }
            }

            prevBtn?.addEventListener('click', () => {
                prevSlide();
                stopAutoSwitch();
                startAutoSwitch();
            });

            nextBtn?.addEventListener('click', () => {
                nextSlide();
                stopAutoSwitch();
                startAutoSwitch();
            });

            // Start auto-switching
            startAutoSwitch();

            // Handle page visibility changes
            document.addEventListener('visibilitychange', () => {
                if (document.hidden) {
                    stopAutoSwitch();
                } else {
                    startAutoSwitch();
                }
            });

            // Handle window resize
            window.addEventListener('resize', () => {
                stopAutoSwitch();
                startAutoSwitch();
            });
        }

        function setupFadeInAnimations() {
            const fadeElements = document.querySelectorAll('.fade-in-element');

            const observer = new IntersectionObserver(
                (entries) => {
                    entries.forEach((entry, index) => {
                        if (entry.isIntersecting) {
                            setTimeout(() => {
                                entry.target.classList.add('visible');
                            }, index * 100); // Stagger effect: 100ms delay for each element
                            observer.unobserve(entry.target);
                        }
                    });
                },
                {
                    root: null,
                    rootMargin: '0px',
                    threshold: 0.1,
                }
            );

            fadeElements.forEach((element) => {
                observer.observe(element);
            });
        }

        function init() {
            setupCarousel();
            setupFadeInAnimations();
        }

        // Run on initial load
        document.addEventListener('DOMContentLoaded', init);

        // For Astro's view transitions
        document.addEventListener('astro:page-load', init);
    </script>
</MainLayout>
