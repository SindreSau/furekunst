---
import { Icon } from 'astro-icon/components';
import MainLayout from '../layouts/MainLayout.astro';

const iconClass = 'w-12 h-12 transition-all duration-300 ease-in-out transform hover:scale-110 hover:rotate-6';
const techStack = [
    { name: 'Tailwind', icon: 'mdi:tailwind' },
    { name: 'Astro', icon: 'simple-icons:astro' },
    { name: 'Contentful', icon: 'simple-icons:contentful' },
    { name: 'Netlify', icon: 'simple-icons:netlify' },
    { name: 'GitHub', icon: 'simple-icons:github' },
];
---

<MainLayout title='Om siden'>
    <div class='max-w-4xl mx-auto px-4 py-8'>
        <div class='bg-white shadow-2xl rounded-lg overflow-hidden transition-all duration-300 hover:shadow-3xl'>
            <div class='p-8'>
                <div class='flex flex-col-reverse md:flex-row gap-8 items-center md:items-start'>
                    <div class='order-2 md:order-1 md:w-2/3'>
                        <h1 class='text-4xl font-bold text-left mb-6 text-gray-800 fade-in-element'>Om nettsiden</h1>
                        <p class='text-gray-600 leading-relaxed fade-in-element'>
                            Furekunst er et minimalistisk kunstgalleri og nettsted for kunstneren Furekunst. Nettsiden
                            er bygget av Sindre Sauarlia som en del av hans porteføljebygging.
                        </p>
                    </div>
                    <a
                        href='https://github.com/SindreSau/furekunst?tab=readme-ov-file'
                        class='flex flex-col items-center fade-in-element order-1 md:order-2 md:w-1/3'
                        target='_blank'
                        rel='noopener noreferrer'>
                        <img
                            src='https://avatars.githubusercontent.com/u/101213882?v=4'
                            alt="Creator's image"
                            class='w-24 h-24 rounded-full shadow-lg mb-4'
                        />
                        <button
                            class='inline-flex items-center px-4 py-2 bg-gray-800 text-white rounded-md hover:bg-gray-700 transition-colors duration-300'>
                            <Icon name='simple-icons:github' class='w-5 h-5 mr-2' />
                            View on GitHub
                        </button>
                    </a>
                </div>

                <h2 class='text-2xl font-semibold text-gray-800 mt-12 mb-4 fade-in-element'>Tech stack</h2>
                <p class='fade-in-element text-gray-600 mb-8'>
                    Nettsiden er primært bygget med Astro og Tailwind. Astro genererer statiske nettsider som standard
                    og laster kun JavaScript når det er nødvendig. Tailwind muliggjør rask og fleksibel styling.
                    Galleriet er koblet til Contentful CMS, slik at kunstneren enkelt kan legge til nye verk.
                </p>
                <div class='flex flex-wrap items-center justify-center gap-6 md:gap-8 my-8'>
                    {
                        techStack.map((tech) => (
                            <div class='flex flex-col items-center group fade-in-element'>
                                <Icon name={tech.icon} class={iconClass} />
                                <span class='mt-2 text-xs md:text-sm text-gray-500 opacity-0 group-hover:opacity-100 transition-opacity duration-300'>
                                    {tech.name}
                                </span>
                            </div>
                        ))
                    }
                </div>

                <h2 class='text-2xl font-semibold text-gray-800 mt-12 mb-4 fade-in-element'>Bygget for</h2>
                <div class='grid grid-cols-2 md:flex md:flex-wrap justify-center gap-4 text-gray-600 mb-6'>
                    {
                        ['Ytelse', 'Tilgjengelighet', 'Best practice', 'SEO'].map((item) => (
                            <span class='px-4 py-2 bg-gray-100 rounded-full text-sm font-medium hover:bg-gray-200 transition-colors duration-300 fade-in-element text-center'>
                                {item}
                            </span>
                        ))
                    }
                </div>

                <div
                    class='mt-12 bg-gradient-to-r from-purple-400 via-pink-500 to-red-500 p-1 rounded-lg fade-in-element'>
                    <div class='bg-white p-4 md:p-6 rounded-lg'>
                        <h3 class='text-xl font-semibold text-gray-800 mb-4'>Lighthouse Score</h3>
                        <div class='grid grid-cols-2 md:flex md:justify-around gap-4'>
                            {
                                ['Performance', 'Accessibility', 'Best Practices', 'SEO'].map((metric) => (
                                    <div class='text-center fade-in-element'>
                                        <div class='inline-flex items-center justify-center w-16 h-16 rounded-full bg-green-500 text-white font-bold text-xl'>
                                            100
                                        </div>
                                        <p class='mt-2 text-xs md:text-sm text-gray-600'>{metric}</p>
                                    </div>
                                ))
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</MainLayout>

<style>
    .fade-in-element {
        opacity: 0;
        transform: translateY(20px);
        transition:
            opacity 0.3s ease-out,
            transform 0.3s ease-out;
    }

    .fade-in-element.visible {
        opacity: 1;
        transform: translateY(0);
    }

    @keyframes float {
        0% {
            transform: translateY(0px);
        }
        50% {
            transform: translateY(-10px);
        }
        100% {
            transform: translateY(0px);
        }
    }

    .hover\:float:hover {
        animation: float 3s ease-in-out infinite;
    }
</style>

<script>
    function setupFadeInAnimations() {
        const fadeElements = document.querySelectorAll('.fade-in-element');

        const observer = new IntersectionObserver(
            (entries) => {
                entries.forEach((entry, index) => {
                    if (entry.isIntersecting) {
                        setTimeout(() => {
                            entry.target.classList.add('visible');
                        }, index * 80); // Stagger effect * delay for each element
                        observer.unobserve(entry.target);
                    }
                });
            },
            {
                root: null,
                rootMargin: '0px',
                threshold: 0.1,
            }
        );

        fadeElements.forEach((element) => {
            observer.observe(element);
        });
    }

    function init() {
        setupFadeInAnimations();
    }

    // Run on initial load
    document.addEventListener('DOMContentLoaded', init);

    // For Astro's view transitions
    document.addEventListener('astro:page-load', init);
</script>
